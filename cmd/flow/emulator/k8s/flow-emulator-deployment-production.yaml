apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: flow-emulator
  namespace: flow
  annotations:
    kubernetes.io/ingress.class: traefik

    # Whitelisting the office IP only for now
    traefik.ingress.kubernetes.io/whitelist-source-range: "208.98.206.170/32"
    ingress.kubernetes.io/ssl-redirect: "true"

    # Security headers - sensible defaults and tunable examples

    # Enforce TLS
    ingress.kubernetes.io/hsts-max-age: "2592000" # 30d
    ingress.kubernetes.io/hsts-include-subdomains: "true"

    # Force non-SSL over
    ingress.kubernetes.io/force-hsts: "true"

    # Tell browsers to block several XSS methods
    ingress.kubernetes.io/browser-xss-filter: "true"

    # Prevent browsers from mistaking the response content type
    ingress.kubernetes.io/content-type-nosniff: "true"

    # Indicate we don't want to be in an iframe (stop clickjacking attacks):
    # DENY -> ever; SAMEORIGIN -> unless it's a site in our own domain doing it
    ingress.kubernetes.io/custom-frame-options-value: "DENY"

    # Control Referrer information leaks to other origins
    ingress.kubernetes.io/referrer-policy: "strict-origin-when-cross-origin"
  labels:
    app: flow-emulator
    env: production
    owner: Kan
spec:
  rules:
    - host: grpc.emulator.withflow.org
      http:
        paths:
          - backend:
              serviceName: flow-emulator-v1
              servicePort: grpc
---

apiVersion: v1
kind: Service

metadata:
  name: flow-emulator-v1
  namespace: flow

  labels:
    app: flow-emulator
    env: production
    owner: Kan
    version: v1

spec:
  type: ClusterIP
  selector:
    app: flow-emulator
    env: production
    version: v1

  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http # reference to the name of the port in your container config
    - name: grpc
      protocol: TCP
      port: 3569
      targetPort: grpc # reference to the name of the port in your container config

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  # This is the full name of your deployment. It must be unique
  name: flow-emulator-v1
  namespace: flow

  # Best practice labels:
  #   app: <app-name> (the non-unique version of metadata.name)
  #   kind: [web|worker]
  #   env: [staging|production|canary|test|dev]
  #   owner: who to ask about this service
  #   version: the major version of this service (v1/v2/v1beta1)
  labels:
    app: flow-emulator
    kind: web
    env: production
    owner: Kan
    version: v1

spec:
  replicas: 1
  selector:
    matchLabels:
      app: flow-emulator
      env: production
      version: v1
  serviceName: flow-emulator-v1
  template:
    metadata:
      annotations:
        # Set to "false" to opt out of prometheus scrapes
        # Prometheus still needs a port called "metrics" (below) to scrape properly
        prometheus.io/scrape: 'true'

        # Set the path to the API endpoint that exposes prometheus metrics, or leave blank for `/metrics`
        # prometheus.io/path: "/metrics"

      labels:
        app: flow-emulator
        env: production
        owner: Kan
        version: v1
        kind: web

    spec:
      imagePullSecrets:
        - name: gcr
      containers:
        - name: flow-emulator
          # No tag, will be attached by teamcity
          image: gcr.io/dl-flow/emulator
          args: ["emulator", "start", "--init", "-v", "--persistent"]

          # Ports exposed can be named so other resources can reference
          # them by name and not have to hard code numbers
          ports:
            - name: grpc
              containerPort: 3569
            - name: http
              containerPort: 8080
            # Prometheus is looking specifically for a port named 'metrics'
            # This may be the same as the above port, or different
            - name: metrics
              containerPort: 8080

          # Environment variables
          env:
            - name: FLOW_ROOTKEY
              valueFrom:
                secretKeyRef:
                  name: emulator-flow-json
                  key: root-key
            - name: FLOW_DBPATH
              value: '/flowdb'

          # Resource requests and contraints
          resources:
            requests:
              cpu: '250m'
              memory: '256Mi'
            limits:
              cpu: '500m'
              memory: '2048Mi'
          volumeMounts:
            - name: badger-volume
              mountPath: /flowdb
          # Readiness Probe
          readinessProbe:
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 5
            successThreshold: 1
          
          # Liveness Probe
          livenessProbe:
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
      volumes:
        - name: badger-volume
          persistentVolumeClaim:
            claimName: emulator-storage-claim


  volumeClaimTemplates:
    - metadata:
        name: badger-volume
        labels:
          app: flow-emulator
          env: production
          owner: Kan
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard