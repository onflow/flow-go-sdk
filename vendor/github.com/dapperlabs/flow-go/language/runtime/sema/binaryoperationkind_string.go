// Code generated by "stringer -type=BinaryOperationKind"; DO NOT EDIT.

package sema

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BinaryOperationKindUnknown-0]
	_ = x[BinaryOperationKindIntegerArithmetic-1]
	_ = x[BinaryOperationKindIntegerComparison-2]
	_ = x[BinaryOperationKindBooleanLogic-3]
	_ = x[BinaryOperationKindEquality-4]
	_ = x[BinaryOperationKindNilCoalescing-5]
	_ = x[BinaryOperationKindConcatenation-6]
}

const _BinaryOperationKind_name = "BinaryOperationKindUnknownBinaryOperationKindIntegerArithmeticBinaryOperationKindIntegerComparisonBinaryOperationKindBooleanLogicBinaryOperationKindEqualityBinaryOperationKindNilCoalescingBinaryOperationKindConcatenation"

var _BinaryOperationKind_index = [...]uint8{0, 26, 62, 98, 129, 156, 188, 220}

func (i BinaryOperationKind) String() string {
	if i < 0 || i >= BinaryOperationKind(len(_BinaryOperationKind_index)-1) {
		return "BinaryOperationKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BinaryOperationKind_name[_BinaryOperationKind_index[i]:_BinaryOperationKind_index[i+1]]
}
