// Code generated from parser/Cadence.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 82, 604,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 4, 85, 9, 85, 4, 86,
	9, 86, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7,
	3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19,
	3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3,
	24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28,
	3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3,
	31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34,
	3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3,
	38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39,
	3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3,
	40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41,
	3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3,
	42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44,
	3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3,
	46, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48,
	3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 50, 3, 51, 3, 51, 3,
	51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 53, 3, 53,
	3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3,
	54, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56,
	3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3,
	57, 3, 57, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 59, 3, 60,
	3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 3,
	62, 3, 62, 3, 62, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 64, 3, 64, 3, 64,
	3, 64, 3, 64, 3, 64, 3, 65, 3, 65, 3, 65, 3, 65, 3, 66, 3, 66, 3, 66, 3,
	66, 3, 66, 3, 66, 3, 66, 3, 67, 3, 67, 3, 67, 3, 67, 3, 67, 3, 68, 3, 68,
	3, 68, 3, 68, 3, 68, 3, 68, 3, 68, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3,
	69, 3, 69, 3, 69, 3, 70, 3, 70, 7, 70, 463, 10, 70, 12, 70, 14, 70, 466,
	11, 70, 3, 71, 5, 71, 469, 10, 71, 3, 72, 3, 72, 5, 72, 473, 10, 72, 3,
	73, 3, 73, 7, 73, 477, 10, 73, 12, 73, 14, 73, 480, 11, 73, 3, 73, 5, 73,
	483, 10, 73, 3, 73, 3, 73, 3, 73, 7, 73, 488, 10, 73, 12, 73, 14, 73, 491,
	11, 73, 3, 73, 5, 73, 494, 10, 73, 3, 74, 3, 74, 7, 74, 498, 10, 74, 12,
	74, 14, 74, 501, 11, 74, 3, 75, 3, 75, 3, 75, 3, 75, 6, 75, 507, 10, 75,
	13, 75, 14, 75, 508, 3, 76, 3, 76, 3, 76, 3, 76, 6, 76, 515, 10, 76, 13,
	76, 14, 76, 516, 3, 77, 3, 77, 3, 77, 3, 77, 6, 77, 523, 10, 77, 13, 77,
	14, 77, 524, 3, 78, 3, 78, 3, 78, 7, 78, 530, 10, 78, 12, 78, 14, 78, 533,
	11, 78, 3, 79, 3, 79, 7, 79, 537, 10, 79, 12, 79, 14, 79, 540, 11, 79,
	3, 79, 3, 79, 3, 80, 3, 80, 5, 80, 546, 10, 80, 3, 81, 3, 81, 3, 81, 3,
	81, 3, 81, 3, 81, 3, 81, 6, 81, 555, 10, 81, 13, 81, 14, 81, 556, 3, 81,
	3, 81, 5, 81, 561, 10, 81, 3, 82, 3, 82, 3, 83, 6, 83, 566, 10, 83, 13,
	83, 14, 83, 567, 3, 83, 3, 83, 3, 84, 6, 84, 573, 10, 84, 13, 84, 14, 84,
	574, 3, 84, 3, 84, 3, 85, 3, 85, 3, 85, 3, 85, 3, 85, 7, 85, 584, 10, 85,
	12, 85, 14, 85, 587, 11, 85, 3, 85, 3, 85, 3, 85, 3, 85, 3, 85, 3, 86,
	3, 86, 3, 86, 3, 86, 7, 86, 598, 10, 86, 12, 86, 14, 86, 601, 11, 86, 3,
	86, 3, 86, 3, 585, 2, 87, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9,
	17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18,
	35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27,
	53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36,
	71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45,
	89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53, 105,
	54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61, 121,
	62, 123, 63, 125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135, 69, 137,
	70, 139, 71, 141, 2, 143, 2, 145, 72, 147, 73, 149, 74, 151, 75, 153, 76,
	155, 77, 157, 78, 159, 2, 161, 2, 163, 2, 165, 79, 167, 80, 169, 81, 171,
	82, 3, 2, 16, 5, 2, 67, 92, 97, 97, 99, 124, 3, 2, 50, 59, 4, 2, 50, 59,
	97, 97, 4, 2, 50, 51, 97, 97, 4, 2, 50, 57, 97, 97, 6, 2, 50, 59, 67, 72,
	97, 97, 99, 104, 4, 2, 67, 92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99,
	124, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 9, 2, 36, 36, 41, 41, 50, 50,
	94, 94, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59, 67, 72, 99, 104, 6,
	2, 2, 2, 11, 11, 13, 14, 34, 34, 5, 2, 12, 12, 15, 15, 8234, 8235, 4, 2,
	12, 12, 15, 15, 2, 618, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2,
	2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2,
	2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3,
	2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69,
	3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2,
	77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2,
	2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2,
	2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2,
	2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107,
	3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2,
	2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3,
	2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2,
	129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2, 2, 135, 3, 2,
	2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147,
	3, 2, 2, 2, 2, 149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2,
	2, 155, 3, 2, 2, 2, 2, 157, 3, 2, 2, 2, 2, 165, 3, 2, 2, 2, 2, 167, 3,
	2, 2, 2, 2, 169, 3, 2, 2, 2, 2, 171, 3, 2, 2, 2, 3, 173, 3, 2, 2, 2, 5,
	175, 3, 2, 2, 2, 7, 177, 3, 2, 2, 2, 9, 179, 3, 2, 2, 2, 11, 181, 3, 2,
	2, 2, 13, 183, 3, 2, 2, 2, 15, 185, 3, 2, 2, 2, 17, 187, 3, 2, 2, 2, 19,
	189, 3, 2, 2, 2, 21, 193, 3, 2, 2, 2, 23, 195, 3, 2, 2, 2, 25, 198, 3,
	2, 2, 2, 27, 201, 3, 2, 2, 2, 29, 204, 3, 2, 2, 2, 31, 207, 3, 2, 2, 2,
	33, 209, 3, 2, 2, 2, 35, 211, 3, 2, 2, 2, 37, 214, 3, 2, 2, 2, 39, 217,
	3, 2, 2, 2, 41, 219, 3, 2, 2, 2, 43, 221, 3, 2, 2, 2, 45, 223, 3, 2, 2,
	2, 47, 225, 3, 2, 2, 2, 49, 227, 3, 2, 2, 2, 51, 232, 3, 2, 2, 2, 53, 234,
	3, 2, 2, 2, 55, 236, 3, 2, 2, 2, 57, 239, 3, 2, 2, 2, 59, 243, 3, 2, 2,
	2, 61, 245, 3, 2, 2, 2, 63, 249, 3, 2, 2, 2, 65, 252, 3, 2, 2, 2, 67, 256,
	3, 2, 2, 2, 69, 260, 3, 2, 2, 2, 71, 262, 3, 2, 2, 2, 73, 264, 3, 2, 2,
	2, 75, 266, 3, 2, 2, 2, 77, 278, 3, 2, 2, 2, 79, 285, 3, 2, 2, 2, 81, 294,
	3, 2, 2, 2, 83, 303, 3, 2, 2, 2, 85, 313, 3, 2, 2, 2, 87, 317, 3, 2, 2,
	2, 89, 323, 3, 2, 2, 2, 91, 328, 3, 2, 2, 2, 93, 332, 3, 2, 2, 2, 95, 337,
	3, 2, 2, 2, 97, 342, 3, 2, 2, 2, 99, 346, 3, 2, 2, 2, 101, 350, 3, 2, 2,
	2, 103, 357, 3, 2, 2, 2, 105, 361, 3, 2, 2, 2, 107, 366, 3, 2, 2, 2, 109,
	374, 3, 2, 2, 2, 111, 381, 3, 2, 2, 2, 113, 387, 3, 2, 2, 2, 115, 396,
	3, 2, 2, 2, 117, 400, 3, 2, 2, 2, 119, 404, 3, 2, 2, 2, 121, 407, 3, 2,
	2, 2, 123, 412, 3, 2, 2, 2, 125, 418, 3, 2, 2, 2, 127, 423, 3, 2, 2, 2,
	129, 429, 3, 2, 2, 2, 131, 433, 3, 2, 2, 2, 133, 440, 3, 2, 2, 2, 135,
	445, 3, 2, 2, 2, 137, 452, 3, 2, 2, 2, 139, 460, 3, 2, 2, 2, 141, 468,
	3, 2, 2, 2, 143, 472, 3, 2, 2, 2, 145, 474, 3, 2, 2, 2, 147, 495, 3, 2,
	2, 2, 149, 502, 3, 2, 2, 2, 151, 510, 3, 2, 2, 2, 153, 518, 3, 2, 2, 2,
	155, 526, 3, 2, 2, 2, 157, 534, 3, 2, 2, 2, 159, 545, 3, 2, 2, 2, 161,
	560, 3, 2, 2, 2, 163, 562, 3, 2, 2, 2, 165, 565, 3, 2, 2, 2, 167, 572,
	3, 2, 2, 2, 169, 578, 3, 2, 2, 2, 171, 593, 3, 2, 2, 2, 173, 174, 7, 61,
	2, 2, 174, 4, 3, 2, 2, 2, 175, 176, 7, 125, 2, 2, 176, 6, 3, 2, 2, 2, 177,
	178, 7, 127, 2, 2, 178, 8, 3, 2, 2, 2, 179, 180, 7, 46, 2, 2, 180, 10,
	3, 2, 2, 2, 181, 182, 7, 60, 2, 2, 182, 12, 3, 2, 2, 2, 183, 184, 7, 48,
	2, 2, 184, 14, 3, 2, 2, 2, 185, 186, 7, 93, 2, 2, 186, 16, 3, 2, 2, 2,
	187, 188, 7, 95, 2, 2, 188, 18, 3, 2, 2, 2, 189, 190, 7, 62, 2, 2, 190,
	191, 7, 47, 2, 2, 191, 192, 7, 64, 2, 2, 192, 20, 3, 2, 2, 2, 193, 194,
	7, 63, 2, 2, 194, 22, 3, 2, 2, 2, 195, 196, 7, 126, 2, 2, 196, 197, 7,
	126, 2, 2, 197, 24, 3, 2, 2, 2, 198, 199, 7, 40, 2, 2, 199, 200, 7, 40,
	2, 2, 200, 26, 3, 2, 2, 2, 201, 202, 7, 63, 2, 2, 202, 203, 7, 63, 2, 2,
	203, 28, 3, 2, 2, 2, 204, 205, 7, 35, 2, 2, 205, 206, 7, 63, 2, 2, 206,
	30, 3, 2, 2, 2, 207, 208, 7, 62, 2, 2, 208, 32, 3, 2, 2, 2, 209, 210, 7,
	64, 2, 2, 210, 34, 3, 2, 2, 2, 211, 212, 7, 62, 2, 2, 212, 213, 7, 63,
	2, 2, 213, 36, 3, 2, 2, 2, 214, 215, 7, 64, 2, 2, 215, 216, 7, 63, 2, 2,
	216, 38, 3, 2, 2, 2, 217, 218, 7, 45, 2, 2, 218, 40, 3, 2, 2, 2, 219, 220,
	7, 47, 2, 2, 220, 42, 3, 2, 2, 2, 221, 222, 7, 44, 2, 2, 222, 44, 3, 2,
	2, 2, 223, 224, 7, 49, 2, 2, 224, 46, 3, 2, 2, 2, 225, 226, 7, 39, 2, 2,
	226, 48, 3, 2, 2, 2, 227, 228, 7, 99, 2, 2, 228, 229, 7, 119, 2, 2, 229,
	230, 7, 118, 2, 2, 230, 231, 7, 106, 2, 2, 231, 50, 3, 2, 2, 2, 232, 233,
	7, 40, 2, 2, 233, 52, 3, 2, 2, 2, 234, 235, 7, 35, 2, 2, 235, 54, 3, 2,
	2, 2, 236, 237, 7, 62, 2, 2, 237, 238, 7, 47, 2, 2, 238, 56, 3, 2, 2, 2,
	239, 240, 7, 62, 2, 2, 240, 241, 7, 47, 2, 2, 241, 242, 7, 35, 2, 2, 242,
	58, 3, 2, 2, 2, 243, 244, 7, 65, 2, 2, 244, 60, 3, 2, 2, 2, 245, 246, 5,
	165, 83, 2, 246, 247, 7, 65, 2, 2, 247, 248, 7, 65, 2, 2, 248, 62, 3, 2,
	2, 2, 249, 250, 7, 99, 2, 2, 250, 251, 7, 117, 2, 2, 251, 64, 3, 2, 2,
	2, 252, 253, 7, 99, 2, 2, 253, 254, 7, 117, 2, 2, 254, 255, 7, 65, 2, 2,
	255, 66, 3, 2, 2, 2, 256, 257, 7, 99, 2, 2, 257, 258, 7, 117, 2, 2, 258,
	259, 7, 35, 2, 2, 259, 68, 3, 2, 2, 2, 260, 261, 7, 66, 2, 2, 261, 70,
	3, 2, 2, 2, 262, 263, 7, 42, 2, 2, 263, 72, 3, 2, 2, 2, 264, 265, 7, 43,
	2, 2, 265, 74, 3, 2, 2, 2, 266, 267, 7, 118, 2, 2, 267, 268, 7, 116, 2,
	2, 268, 269, 7, 99, 2, 2, 269, 270, 7, 112, 2, 2, 270, 271, 7, 117, 2,
	2, 271, 272, 7, 99, 2, 2, 272, 273, 7, 101, 2, 2, 273, 274, 7, 118, 2,
	2, 274, 275, 7, 107, 2, 2, 275, 276, 7, 113, 2, 2, 276, 277, 7, 112, 2,
	2, 277, 76, 3, 2, 2, 2, 278, 279, 7, 117, 2, 2, 279, 280, 7, 118, 2, 2,
	280, 281, 7, 116, 2, 2, 281, 282, 7, 119, 2, 2, 282, 283, 7, 101, 2, 2,
	283, 284, 7, 118, 2, 2, 284, 78, 3, 2, 2, 2, 285, 286, 7, 116, 2, 2, 286,
	287, 7, 103, 2, 2, 287, 288, 7, 117, 2, 2, 288, 289, 7, 113, 2, 2, 289,
	290, 7, 119, 2, 2, 290, 291, 7, 116, 2, 2, 291, 292, 7, 101, 2, 2, 292,
	293, 7, 103, 2, 2, 293, 80, 3, 2, 2, 2, 294, 295, 7, 101, 2, 2, 295, 296,
	7, 113, 2, 2, 296, 297, 7, 112, 2, 2, 297, 298, 7, 118, 2, 2, 298, 299,
	7, 116, 2, 2, 299, 300, 7, 99, 2, 2, 300, 301, 7, 101, 2, 2, 301, 302,
	7, 118, 2, 2, 302, 82, 3, 2, 2, 2, 303, 304, 7, 107, 2, 2, 304, 305, 7,
	112, 2, 2, 305, 306, 7, 118, 2, 2, 306, 307, 7, 103, 2, 2, 307, 308, 7,
	116, 2, 2, 308, 309, 7, 104, 2, 2, 309, 310, 7, 99, 2, 2, 310, 311, 7,
	101, 2, 2, 311, 312, 7, 103, 2, 2, 312, 84, 3, 2, 2, 2, 313, 314, 7, 104,
	2, 2, 314, 315, 7, 119, 2, 2, 315, 316, 7, 112, 2, 2, 316, 86, 3, 2, 2,
	2, 317, 318, 7, 103, 2, 2, 318, 319, 7, 120, 2, 2, 319, 320, 7, 103, 2,
	2, 320, 321, 7, 112, 2, 2, 321, 322, 7, 118, 2, 2, 322, 88, 3, 2, 2, 2,
	323, 324, 7, 103, 2, 2, 324, 325, 7, 111, 2, 2, 325, 326, 7, 107, 2, 2,
	326, 327, 7, 118, 2, 2, 327, 90, 3, 2, 2, 2, 328, 329, 7, 114, 2, 2, 329,
	330, 7, 116, 2, 2, 330, 331, 7, 103, 2, 2, 331, 92, 3, 2, 2, 2, 332, 333,
	7, 114, 2, 2, 333, 334, 7, 113, 2, 2, 334, 335, 7, 117, 2, 2, 335, 336,
	7, 118, 2, 2, 336, 94, 3, 2, 2, 2, 337, 338, 7, 114, 2, 2, 338, 339, 7,
	116, 2, 2, 339, 340, 7, 107, 2, 2, 340, 341, 7, 120, 2, 2, 341, 96, 3,
	2, 2, 2, 342, 343, 7, 114, 2, 2, 343, 344, 7, 119, 2, 2, 344, 345, 7, 100,
	2, 2, 345, 98, 3, 2, 2, 2, 346, 347, 7, 117, 2, 2, 347, 348, 7, 103, 2,
	2, 348, 349, 7, 118, 2, 2, 349, 100, 3, 2, 2, 2, 350, 351, 7, 99, 2, 2,
	351, 352, 7, 101, 2, 2, 352, 353, 7, 101, 2, 2, 353, 354, 7, 103, 2, 2,
	354, 355, 7, 117, 2, 2, 355, 356, 7, 117, 2, 2, 356, 102, 3, 2, 2, 2, 357,
	358, 7, 99, 2, 2, 358, 359, 7, 110, 2, 2, 359, 360, 7, 110, 2, 2, 360,
	104, 3, 2, 2, 2, 361, 362, 7, 117, 2, 2, 362, 363, 7, 103, 2, 2, 363, 364,
	7, 110, 2, 2, 364, 365, 7, 104, 2, 2, 365, 106, 3, 2, 2, 2, 366, 367, 7,
	99, 2, 2, 367, 368, 7, 101, 2, 2, 368, 369, 7, 101, 2, 2, 369, 370, 7,
	113, 2, 2, 370, 371, 7, 119, 2, 2, 371, 372, 7, 112, 2, 2, 372, 373, 7,
	118, 2, 2, 373, 108, 3, 2, 2, 2, 374, 375, 7, 116, 2, 2, 375, 376, 7, 103,
	2, 2, 376, 377, 7, 118, 2, 2, 377, 378, 7, 119, 2, 2, 378, 379, 7, 116,
	2, 2, 379, 380, 7, 112, 2, 2, 380, 110, 3, 2, 2, 2, 381, 382, 7, 100, 2,
	2, 382, 383, 7, 116, 2, 2, 383, 384, 7, 103, 2, 2, 384, 385, 7, 99, 2,
	2, 385, 386, 7, 109, 2, 2, 386, 112, 3, 2, 2, 2, 387, 388, 7, 101, 2, 2,
	388, 389, 7, 113, 2, 2, 389, 390, 7, 112, 2, 2, 390, 391, 7, 118, 2, 2,
	391, 392, 7, 107, 2, 2, 392, 393, 7, 112, 2, 2, 393, 394, 7, 119, 2, 2,
	394, 395, 7, 103, 2, 2, 395, 114, 3, 2, 2, 2, 396, 397, 7, 110, 2, 2, 397,
	398, 7, 103, 2, 2, 398, 399, 7, 118, 2, 2, 399, 116, 3, 2, 2, 2, 400, 401,
	7, 120, 2, 2, 401, 402, 7, 99, 2, 2, 402, 403, 7, 116, 2, 2, 403, 118,
	3, 2, 2, 2, 404, 405, 7, 107, 2, 2, 405, 406, 7, 104, 2, 2, 406, 120, 3,
	2, 2, 2, 407, 408, 7, 103, 2, 2, 408, 409, 7, 110, 2, 2, 409, 410, 7, 117,
	2, 2, 410, 411, 7, 103, 2, 2, 411, 122, 3, 2, 2, 2, 412, 413, 7, 121, 2,
	2, 413, 414, 7, 106, 2, 2, 414, 415, 7, 107, 2, 2, 415, 416, 7, 110, 2,
	2, 416, 417, 7, 103, 2, 2, 417, 124, 3, 2, 2, 2, 418, 419, 7, 118, 2, 2,
	419, 420, 7, 116, 2, 2, 420, 421, 7, 119, 2, 2, 421, 422, 7, 103, 2, 2,
	422, 126, 3, 2, 2, 2, 423, 424, 7, 104, 2, 2, 424, 425, 7, 99, 2, 2, 425,
	426, 7, 110, 2, 2, 426, 427, 7, 117, 2, 2, 427, 428, 7, 103, 2, 2, 428,
	128, 3, 2, 2, 2, 429, 430, 7, 112, 2, 2, 430, 431, 7, 107, 2, 2, 431, 432,
	7, 110, 2, 2, 432, 130, 3, 2, 2, 2, 433, 434, 7, 107, 2, 2, 434, 435, 7,
	111, 2, 2, 435, 436, 7, 114, 2, 2, 436, 437, 7, 113, 2, 2, 437, 438, 7,
	116, 2, 2, 438, 439, 7, 118, 2, 2, 439, 132, 3, 2, 2, 2, 440, 441, 7, 104,
	2, 2, 441, 442, 7, 116, 2, 2, 442, 443, 7, 113, 2, 2, 443, 444, 7, 111,
	2, 2, 444, 134, 3, 2, 2, 2, 445, 446, 7, 101, 2, 2, 446, 447, 7, 116, 2,
	2, 447, 448, 7, 103, 2, 2, 448, 449, 7, 99, 2, 2, 449, 450, 7, 118, 2,
	2, 450, 451, 7, 103, 2, 2, 451, 136, 3, 2, 2, 2, 452, 453, 7, 102, 2, 2,
	453, 454, 7, 103, 2, 2, 454, 455, 7, 117, 2, 2, 455, 456, 7, 118, 2, 2,
	456, 457, 7, 116, 2, 2, 457, 458, 7, 113, 2, 2, 458, 459, 7, 123, 2, 2,
	459, 138, 3, 2, 2, 2, 460, 464, 5, 141, 71, 2, 461, 463, 5, 143, 72, 2,
	462, 461, 3, 2, 2, 2, 463, 466, 3, 2, 2, 2, 464, 462, 3, 2, 2, 2, 464,
	465, 3, 2, 2, 2, 465, 140, 3, 2, 2, 2, 466, 464, 3, 2, 2, 2, 467, 469,
	9, 2, 2, 2, 468, 467, 3, 2, 2, 2, 469, 142, 3, 2, 2, 2, 470, 473, 9, 3,
	2, 2, 471, 473, 5, 141, 71, 2, 472, 470, 3, 2, 2, 2, 472, 471, 3, 2, 2,
	2, 473, 144, 3, 2, 2, 2, 474, 482, 9, 3, 2, 2, 475, 477, 9, 4, 2, 2, 476,
	475, 3, 2, 2, 2, 477, 480, 3, 2, 2, 2, 478, 476, 3, 2, 2, 2, 478, 479,
	3, 2, 2, 2, 479, 481, 3, 2, 2, 2, 480, 478, 3, 2, 2, 2, 481, 483, 9, 3,
	2, 2, 482, 478, 3, 2, 2, 2, 482, 483, 3, 2, 2, 2, 483, 484, 3, 2, 2, 2,
	484, 485, 7, 48, 2, 2, 485, 493, 9, 3, 2, 2, 486, 488, 9, 4, 2, 2, 487,
	486, 3, 2, 2, 2, 488, 491, 3, 2, 2, 2, 489, 487, 3, 2, 2, 2, 489, 490,
	3, 2, 2, 2, 490, 492, 3, 2, 2, 2, 491, 489, 3, 2, 2, 2, 492, 494, 9, 3,
	2, 2, 493, 489, 3, 2, 2, 2, 493, 494, 3, 2, 2, 2, 494, 146, 3, 2, 2, 2,
	495, 499, 9, 3, 2, 2, 496, 498, 9, 4, 2, 2, 497, 496, 3, 2, 2, 2, 498,
	501, 3, 2, 2, 2, 499, 497, 3, 2, 2, 2, 499, 500, 3, 2, 2, 2, 500, 148,
	3, 2, 2, 2, 501, 499, 3, 2, 2, 2, 502, 503, 7, 50, 2, 2, 503, 504, 7, 100,
	2, 2, 504, 506, 3, 2, 2, 2, 505, 507, 9, 5, 2, 2, 506, 505, 3, 2, 2, 2,
	507, 508, 3, 2, 2, 2, 508, 506, 3, 2, 2, 2, 508, 509, 3, 2, 2, 2, 509,
	150, 3, 2, 2, 2, 510, 511, 7, 50, 2, 2, 511, 512, 7, 113, 2, 2, 512, 514,
	3, 2, 2, 2, 513, 515, 9, 6, 2, 2, 514, 513, 3, 2, 2, 2, 515, 516, 3, 2,
	2, 2, 516, 514, 3, 2, 2, 2, 516, 517, 3, 2, 2, 2, 517, 152, 3, 2, 2, 2,
	518, 519, 7, 50, 2, 2, 519, 520, 7, 122, 2, 2, 520, 522, 3, 2, 2, 2, 521,
	523, 9, 7, 2, 2, 522, 521, 3, 2, 2, 2, 523, 524, 3, 2, 2, 2, 524, 522,
	3, 2, 2, 2, 524, 525, 3, 2, 2, 2, 525, 154, 3, 2, 2, 2, 526, 527, 7, 50,
	2, 2, 527, 531, 9, 8, 2, 2, 528, 530, 9, 9, 2, 2, 529, 528, 3, 2, 2, 2,
	530, 533, 3, 2, 2, 2, 531, 529, 3, 2, 2, 2, 531, 532, 3, 2, 2, 2, 532,
	156, 3, 2, 2, 2, 533, 531, 3, 2, 2, 2, 534, 538, 7, 36, 2, 2, 535, 537,
	5, 159, 80, 2, 536, 535, 3, 2, 2, 2, 537, 540, 3, 2, 2, 2, 538, 536, 3,
	2, 2, 2, 538, 539, 3, 2, 2, 2, 539, 541, 3, 2, 2, 2, 540, 538, 3, 2, 2,
	2, 541, 542, 7, 36, 2, 2, 542, 158, 3, 2, 2, 2, 543, 546, 5, 161, 81, 2,
	544, 546, 10, 10, 2, 2, 545, 543, 3, 2, 2, 2, 545, 544, 3, 2, 2, 2, 546,
	160, 3, 2, 2, 2, 547, 548, 7, 94, 2, 2, 548, 561, 9, 11, 2, 2, 549, 550,
	7, 94, 2, 2, 550, 551, 7, 119, 2, 2, 551, 552, 3, 2, 2, 2, 552, 554, 7,
	125, 2, 2, 553, 555, 5, 163, 82, 2, 554, 553, 3, 2, 2, 2, 555, 556, 3,
	2, 2, 2, 556, 554, 3, 2, 2, 2, 556, 557, 3, 2, 2, 2, 557, 558, 3, 2, 2,
	2, 558, 559, 7, 127, 2, 2, 559, 561, 3, 2, 2, 2, 560, 547, 3, 2, 2, 2,
	560, 549, 3, 2, 2, 2, 561, 162, 3, 2, 2, 2, 562, 563, 9, 12, 2, 2, 563,
	164, 3, 2, 2, 2, 564, 566, 9, 13, 2, 2, 565, 564, 3, 2, 2, 2, 566, 567,
	3, 2, 2, 2, 567, 565, 3, 2, 2, 2, 567, 568, 3, 2, 2, 2, 568, 569, 3, 2,
	2, 2, 569, 570, 8, 83, 2, 2, 570, 166, 3, 2, 2, 2, 571, 573, 9, 14, 2,
	2, 572, 571, 3, 2, 2, 2, 573, 574, 3, 2, 2, 2, 574, 572, 3, 2, 2, 2, 574,
	575, 3, 2, 2, 2, 575, 576, 3, 2, 2, 2, 576, 577, 8, 84, 2, 2, 577, 168,
	3, 2, 2, 2, 578, 579, 7, 49, 2, 2, 579, 580, 7, 44, 2, 2, 580, 585, 3,
	2, 2, 2, 581, 584, 5, 169, 85, 2, 582, 584, 11, 2, 2, 2, 583, 581, 3, 2,
	2, 2, 583, 582, 3, 2, 2, 2, 584, 587, 3, 2, 2, 2, 585, 586, 3, 2, 2, 2,
	585, 583, 3, 2, 2, 2, 586, 588, 3, 2, 2, 2, 587, 585, 3, 2, 2, 2, 588,
	589, 7, 44, 2, 2, 589, 590, 7, 49, 2, 2, 590, 591, 3, 2, 2, 2, 591, 592,
	8, 85, 2, 2, 592, 170, 3, 2, 2, 2, 593, 594, 7, 49, 2, 2, 594, 595, 7,
	49, 2, 2, 595, 599, 3, 2, 2, 2, 596, 598, 10, 15, 2, 2, 597, 596, 3, 2,
	2, 2, 598, 601, 3, 2, 2, 2, 599, 597, 3, 2, 2, 2, 599, 600, 3, 2, 2, 2,
	600, 602, 3, 2, 2, 2, 601, 599, 3, 2, 2, 2, 602, 603, 8, 86, 2, 2, 603,
	172, 3, 2, 2, 2, 24, 2, 464, 468, 472, 478, 482, 489, 493, 499, 508, 516,
	524, 531, 538, 545, 556, 560, 567, 574, 583, 585, 599, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'{'", "'}'", "','", "':'", "'.'", "'['", "']'", "'<->'", "'='",
	"'||'", "'&&'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'",
	"'*'", "'/'", "'%'", "'auth'", "'&'", "'!'", "'<-'", "'<-!'", "'?'", "",
	"'as'", "'as?'", "'as!'", "'@'", "'('", "')'", "'transaction'", "'struct'",
	"'resource'", "'contract'", "'interface'", "'fun'", "'event'", "'emit'",
	"'pre'", "'post'", "'priv'", "'pub'", "'set'", "'access'", "'all'", "'self'",
	"'account'", "'return'", "'break'", "'continue'", "'let'", "'var'", "'if'",
	"'else'", "'while'", "'true'", "'false'", "'nil'", "'import'", "'from'",
	"'create'", "'destroy'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "Equal", "Unequal",
	"Less", "Greater", "LessEqual", "GreaterEqual", "Plus", "Minus", "Mul",
	"Div", "Mod", "Auth", "Ampersand", "Negate", "Move", "MoveForced", "Optional",
	"NilCoalescing", "Casting", "FailableCasting", "ForceCasting", "ResourceAnnotation",
	"OpenParen", "CloseParen", "Transaction", "Struct", "Resource", "Contract",
	"Interface", "Fun", "Event", "Emit", "Pre", "Post", "Priv", "Pub", "Set",
	"Access", "All", "Self", "Account", "Return", "Break", "Continue", "Let",
	"Var", "If", "Else", "While", "True", "False", "Nil", "Import", "From",
	"Create", "Destroy", "Identifier", "PositiveFixedPointLiteral", "DecimalLiteral",
	"BinaryLiteral", "OctalLiteral", "HexadecimalLiteral", "InvalidNumberLiteral",
	"StringLiteral", "WS", "Terminator", "BlockComment", "LineComment",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "Equal", "Unequal", "Less", "Greater", "LessEqual",
	"GreaterEqual", "Plus", "Minus", "Mul", "Div", "Mod", "Auth", "Ampersand",
	"Negate", "Move", "MoveForced", "Optional", "NilCoalescing", "Casting",
	"FailableCasting", "ForceCasting", "ResourceAnnotation", "OpenParen", "CloseParen",
	"Transaction", "Struct", "Resource", "Contract", "Interface", "Fun", "Event",
	"Emit", "Pre", "Post", "Priv", "Pub", "Set", "Access", "All", "Self", "Account",
	"Return", "Break", "Continue", "Let", "Var", "If", "Else", "While", "True",
	"False", "Nil", "Import", "From", "Create", "Destroy", "Identifier", "IdentifierHead",
	"IdentifierCharacter", "PositiveFixedPointLiteral", "DecimalLiteral", "BinaryLiteral",
	"OctalLiteral", "HexadecimalLiteral", "InvalidNumberLiteral", "StringLiteral",
	"QuotedText", "EscapedCharacter", "HexadecimalDigit", "WS", "Terminator",
	"BlockComment", "LineComment",
}

type CadenceLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewCadenceLexer(input antlr.CharStream) *CadenceLexer {

	l := new(CadenceLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Cadence.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CadenceLexer tokens.
const (
	CadenceLexerT__0                      = 1
	CadenceLexerT__1                      = 2
	CadenceLexerT__2                      = 3
	CadenceLexerT__3                      = 4
	CadenceLexerT__4                      = 5
	CadenceLexerT__5                      = 6
	CadenceLexerT__6                      = 7
	CadenceLexerT__7                      = 8
	CadenceLexerT__8                      = 9
	CadenceLexerT__9                      = 10
	CadenceLexerT__10                     = 11
	CadenceLexerT__11                     = 12
	CadenceLexerEqual                     = 13
	CadenceLexerUnequal                   = 14
	CadenceLexerLess                      = 15
	CadenceLexerGreater                   = 16
	CadenceLexerLessEqual                 = 17
	CadenceLexerGreaterEqual              = 18
	CadenceLexerPlus                      = 19
	CadenceLexerMinus                     = 20
	CadenceLexerMul                       = 21
	CadenceLexerDiv                       = 22
	CadenceLexerMod                       = 23
	CadenceLexerAuth                      = 24
	CadenceLexerAmpersand                 = 25
	CadenceLexerNegate                    = 26
	CadenceLexerMove                      = 27
	CadenceLexerMoveForced                = 28
	CadenceLexerOptional                  = 29
	CadenceLexerNilCoalescing             = 30
	CadenceLexerCasting                   = 31
	CadenceLexerFailableCasting           = 32
	CadenceLexerForceCasting              = 33
	CadenceLexerResourceAnnotation        = 34
	CadenceLexerOpenParen                 = 35
	CadenceLexerCloseParen                = 36
	CadenceLexerTransaction               = 37
	CadenceLexerStruct                    = 38
	CadenceLexerResource                  = 39
	CadenceLexerContract                  = 40
	CadenceLexerInterface                 = 41
	CadenceLexerFun                       = 42
	CadenceLexerEvent                     = 43
	CadenceLexerEmit                      = 44
	CadenceLexerPre                       = 45
	CadenceLexerPost                      = 46
	CadenceLexerPriv                      = 47
	CadenceLexerPub                       = 48
	CadenceLexerSet                       = 49
	CadenceLexerAccess                    = 50
	CadenceLexerAll                       = 51
	CadenceLexerSelf                      = 52
	CadenceLexerAccount                   = 53
	CadenceLexerReturn                    = 54
	CadenceLexerBreak                     = 55
	CadenceLexerContinue                  = 56
	CadenceLexerLet                       = 57
	CadenceLexerVar                       = 58
	CadenceLexerIf                        = 59
	CadenceLexerElse                      = 60
	CadenceLexerWhile                     = 61
	CadenceLexerTrue                      = 62
	CadenceLexerFalse                     = 63
	CadenceLexerNil                       = 64
	CadenceLexerImport                    = 65
	CadenceLexerFrom                      = 66
	CadenceLexerCreate                    = 67
	CadenceLexerDestroy                   = 68
	CadenceLexerIdentifier                = 69
	CadenceLexerPositiveFixedPointLiteral = 70
	CadenceLexerDecimalLiteral            = 71
	CadenceLexerBinaryLiteral             = 72
	CadenceLexerOctalLiteral              = 73
	CadenceLexerHexadecimalLiteral        = 74
	CadenceLexerInvalidNumberLiteral      = 75
	CadenceLexerStringLiteral             = 76
	CadenceLexerWS                        = 77
	CadenceLexerTerminator                = 78
	CadenceLexerBlockComment              = 79
	CadenceLexerLineComment               = 80
)
